# Makefile.in generated by automake 1.10.2 from Makefile.am.
# src/ri/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/Pixie
pkglibdir = $(libdir)/Pixie
pkgincludedir = $(includedir)/Pixie
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-none
host_triplet = x86_64-apple-darwin
am__append_1 = lex.dso.cpp lex.rib.cpp lex.sl.cpp lex.var.cpp lex.if.cpp
am__append_2 = dso.cpp rib.cpp sl.cpp variable.cpp ifexpr.cpp
subdir = src/ri
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libri_la_DEPENDENCIES = ../common/libpixiecommon.la
am_libri_la_OBJECTS = attributes.lo brickmap.lo bundles.lo curves.lo \
	bsplinePatchgrid.lo debug.lo delayed.lo displayChannel.lo \
	dlobject.lo dso.lo error.lo execute.lo executeMisc.lo \
	fileResource.lo hcshader.lo ifexpr.lo implicitSurface.lo \
	file.lo file_png.lo file_tiff.lo \
	init.lo irradiance.lo linsys.lo memory.lo noise.lo object.lo \
	occlusion.lo options.lo patches.lo patchgrid.lo photon.lo \
	photonMap.lo pl.lo points.lo pointCloud.lo pointHierarchy.lo \
	polygons.lo ptcapi.lo quadrics.lo random.lo raytracer.lo \
	refCounter.lo remoteChannel.lo renderer.lo rendererClipping.lo \
	rendererContext.lo rendererDeclerations.lo rendererDisplay.lo \
	rendererFiles.lo rendererJobs.lo rendererMutexes.lo \
	rendererNetwork.lo resource.lo reyes.lo ri.lo rib.lo \
	riInterface.lo ribOut.lo shader.lo shaderPl.lo shading.lo \
	show.lo sl.lo stats.lo stochastic.lo subdivision.lo \
	subdivisionCreator.lo surface.lo texmake.lo texture.lo \
	texture3d.lo trace.lo variable.lo xform.lo zbuffer.lo
libri_la_OBJECTS = $(am_libri_la_OBJECTS)
libri_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libri_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libri_la_SOURCES)
DIST_SOURCES = $(libri_la_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/missing --run tar
AR = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar
AUTOCONF = ${SHELL} /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/missing --run automake-1.10
AWK = awk
BISON = /usr/bin/bison
BUILD_SHOW = 
CC = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang
CCDEPMODE = depmode=gcc3
CFLAGS = -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator9.2.sdk -miphoneos-version-min=9.2 -I/Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/../libtiff-ios/dependencies/include
CPP = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -E
CPPFLAGS = -arch x86_64  -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator9.2.sdk -miphoneos-version-min=9.2 -I/Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/../libtiff-ios/dependencies/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = dsymutil
DUMPBIN = link -dump -symbols
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FLEX = /usr/bin/flex
FLTK_CONFIG = no
FLTK_CXXFLAGS = 
FLTK_LDFLAGS = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator9.2.sdk -L/Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/../libtiff-ios/dependencies/lib
LIBOBJS = 
LIBS = -lpthread -lm -ldl -ltiff -ltiffxx -ljpeg -lpng
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/missing --run makeinfo
MKDIR_P = ../.././install-sh -c -d
NM = link -dump -symbols
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OPENEXR_INCLUDES = 
OPENEXR_LDFLAGS = 
OPENEXR_LIBS = 
OTOOL = otool
OTOOL64 = :
PACKAGE = Pixie
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PIXIE_DISPLAYS = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/displays
PIXIE_DOCS = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/doc
PIXIE_MODULES = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/modules
PIXIE_PROCEDURALS = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/procedurals
PIXIE_RIBS = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/ribs
PIXIE_SHADERS = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/shaders
PIXIE_TEXTURES = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/textures
PNG_LIBS = 
RANLIB = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TIFF_LIBS = -lpthread -lm -ldl -ltiff -ltiffxx -ljpeg -lpng
VERSION = 2.2.6
XMKMF = 
X_CFLAGS =  -I/usr/X11/include
X_EXTRA_LIBS = 
X_LDFLAGS =  -lX11 -lXext
X_LIBS =  -L/usr/X11/lib
X_PRE_LIBS = 
ZLIB_LIBS = -lz
abs_builddir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/src/ri
abs_srcdir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/src/ri
abs_top_builddir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie
abs_top_srcdir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie
ac_ct_CC = 
ac_ct_CXX = g++
ac_ct_DUMPBIN = link -dump -symbols
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-none
build_alias = x86_64
build_cpu = x86_64
build_os = none
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
displaysdir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/displays
docdir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/doc
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin
host_alias = x86_64-apple-darwin
host_cpu = x86_64
host_os = darwin
host_vendor = apple
htmldir = ${docdir}
includedir = $(prefix)/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = /bin/echo
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
modulesdir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/modules
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64
proceduraldir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/procedurals
program_transform_name = s,x,x,
psdir = ${docdir}
ribdir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/ribs
sbindir = ${exec_prefix}/sbin
shaderdir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/shaders
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
texturedir = /Users/ataibarkai/Dropbox/Software-Development/iPhone-Dev/Pixie-iOS/Pixie/output/x86_64/textures
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LTLIBRARIES = libri.la 
LIBRI_CURRENT_VERSION = 0
LIBRI_REVISION_VERSION = 0
LIBRI_AGE_VERSION = 0
libri_la_LDFLAGS = -export-dynamic -version-info $(LIBRI_CURRENT_VERSION):$(LIBRI_REVISION_VERSION):$(LIBRI_AGE_VERSION)
libri_la_SOURCES = attributes.cpp \
				brickmap.cpp \
				bundles.cpp \
				curves.cpp \
				bsplinePatchgrid.cpp \
				debug.cpp \
				delayed.cpp \
				displayChannel.cpp \
				dlobject.cpp \
				dso.cpp \
				error.cpp \
				execute.cpp \
				executeMisc.cpp \
				file.cpp \
				file_png.cpp \
				file_tiff.cpp \
				fileResource.cpp \
				hcshader.cpp \
				ifexpr.cpp \
				implicitSurface.cpp \
				init.cpp \
				irradiance.cpp \
				linsys.cpp \
				memory.cpp \
				noise.cpp \
				object.cpp \
				occlusion.cpp \
				options.cpp \
				patches.cpp \
				patchgrid.cpp \
				photon.cpp \
				photonMap.cpp \
				pl.cpp \
				points.cpp \
				pointCloud.cpp \
				pointHierarchy.cpp \
				polygons.cpp \
				ptcapi.cpp \
				quadrics.cpp \
				random.cpp \
				raytracer.cpp \
				refCounter.cpp \
				remoteChannel.cpp \
				renderer.cpp \
				rendererClipping.cpp \
				rendererContext.cpp \
				rendererDeclerations.cpp \
				rendererDisplay.cpp \
				rendererFiles.cpp \
				rendererJobs.cpp \
				rendererMutexes.cpp \
				rendererNetwork.cpp \
				resource.cpp \
				reyes.cpp \
				ri.cpp \
				rib.cpp \
				riInterface.cpp \
				ribOut.cpp \
				shader.cpp \
				shaderPl.cpp \
				shading.cpp \
				show.cpp \
				sl.cpp \
				stats.cpp \
				stochastic.cpp \
				subdivision.cpp \
				subdivisionCreator.cpp \
				surface.cpp \
				texmake.cpp \
				texture.cpp \
				texture3d.cpp \
				trace.cpp \
				variable.cpp \
				xform.cpp	\
				zbuffer.cpp

libri_la_LIBADD = ../common/libpixiecommon.la -lpthread -lm -ldl -ltiff -ltiffxx -ljpeg -lpng  -lz
INCLUDES = -I..
include_HEADERS = ri.h dsply.h shadeop.h implicit.h dlo.h ptcapi.h
BUILT_SOURCES = $(am__append_1) $(am__append_2)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/ri/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/ri/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libri.la: $(libri_la_OBJECTS) $(libri_la_DEPENDENCIES) 
	$(libri_la_LINK) -rpath $(libdir) $(libri_la_OBJECTS) $(libri_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/attributes.Plo
include ./$(DEPDIR)/brickmap.Plo
include ./$(DEPDIR)/bsplinePatchgrid.Plo
include ./$(DEPDIR)/bundles.Plo
include ./$(DEPDIR)/curves.Plo
include ./$(DEPDIR)/debug.Plo
include ./$(DEPDIR)/delayed.Plo
include ./$(DEPDIR)/displayChannel.Plo
include ./$(DEPDIR)/dlobject.Plo
include ./$(DEPDIR)/dso.Plo
include ./$(DEPDIR)/error.Plo
include ./$(DEPDIR)/execute.Plo
include ./$(DEPDIR)/executeMisc.Plo
include ./$(DEPDIR)/fileResource.Plo
include ./$(DEPDIR)/file.Plo
include ./$(DEPDIR)/file_png.Plo
include ./$(DEPDIR)/file_tiff.Plo
include ./$(DEPDIR)/hcshader.Plo
include ./$(DEPDIR)/ifexpr.Plo
include ./$(DEPDIR)/implicitSurface.Plo
include ./$(DEPDIR)/init.Plo
include ./$(DEPDIR)/irradiance.Plo
include ./$(DEPDIR)/linsys.Plo
include ./$(DEPDIR)/memory.Plo
include ./$(DEPDIR)/noise.Plo
include ./$(DEPDIR)/object.Plo
include ./$(DEPDIR)/occlusion.Plo
include ./$(DEPDIR)/options.Plo
include ./$(DEPDIR)/patches.Plo
include ./$(DEPDIR)/patchgrid.Plo
include ./$(DEPDIR)/photon.Plo
include ./$(DEPDIR)/photonMap.Plo
include ./$(DEPDIR)/pl.Plo
include ./$(DEPDIR)/pointCloud.Plo
include ./$(DEPDIR)/pointHierarchy.Plo
include ./$(DEPDIR)/points.Plo
include ./$(DEPDIR)/polygons.Plo
include ./$(DEPDIR)/ptcapi.Plo
include ./$(DEPDIR)/quadrics.Plo
include ./$(DEPDIR)/random.Plo
include ./$(DEPDIR)/raytracer.Plo
include ./$(DEPDIR)/refCounter.Plo
include ./$(DEPDIR)/remoteChannel.Plo
include ./$(DEPDIR)/renderer.Plo
include ./$(DEPDIR)/rendererClipping.Plo
include ./$(DEPDIR)/rendererContext.Plo
include ./$(DEPDIR)/rendererDeclerations.Plo
include ./$(DEPDIR)/rendererDisplay.Plo
include ./$(DEPDIR)/rendererFiles.Plo
include ./$(DEPDIR)/rendererJobs.Plo
include ./$(DEPDIR)/rendererMutexes.Plo
include ./$(DEPDIR)/rendererNetwork.Plo
include ./$(DEPDIR)/resource.Plo
include ./$(DEPDIR)/reyes.Plo
include ./$(DEPDIR)/ri.Plo
include ./$(DEPDIR)/riInterface.Plo
include ./$(DEPDIR)/rib.Plo
include ./$(DEPDIR)/ribOut.Plo
include ./$(DEPDIR)/shader.Plo
include ./$(DEPDIR)/shaderPl.Plo
include ./$(DEPDIR)/shading.Plo
include ./$(DEPDIR)/show.Plo
include ./$(DEPDIR)/sl.Plo
include ./$(DEPDIR)/stats.Plo
include ./$(DEPDIR)/stochastic.Plo
include ./$(DEPDIR)/subdivision.Plo
include ./$(DEPDIR)/subdivisionCreator.Plo
include ./$(DEPDIR)/surface.Plo
include ./$(DEPDIR)/texmake.Plo
include ./$(DEPDIR)/texture.Plo
include ./$(DEPDIR)/texture3d.Plo
include ./$(DEPDIR)/trace.Plo
include ./$(DEPDIR)/variable.Plo
include ./$(DEPDIR)/xform.Plo
include ./$(DEPDIR)/zbuffer.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES


lex.dso.cpp: dso.l
	/usr/bin/flex -i -Pdso -olex.dso.cpp dso.l

lex.rib.cpp: rib.l
	/usr/bin/flex -i -Prib -olex.rib.cpp rib.l

lex.sl.cpp: sdr.l
	/usr/bin/flex -Psl -olex.sl.cpp sdr.l

lex.var.cpp: variable.l
	/usr/bin/flex -Pvar -olex.var.cpp variable.l

lex.if.cpp: ifexpr.l
	/usr/bin/flex -Pif -olex.if.cpp ifexpr.l

dso.cpp: dso.y
	/usr/bin/bison -p dso -o dso.cpp dso.y

rib.cpp: rib.y
	/usr/bin/bison -p rib -o rib.cpp rib.y

sl.cpp: sdr.y
	/usr/bin/bison -p sl -o sl.cpp sdr.y

variable.cpp: variable.y
	/usr/bin/bison -p var -o variable.cpp variable.y

ifexpr.cpp: ifexpr.y
	/usr/bin/bison -p if -o ifexpr.cpp ifexpr.y
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
